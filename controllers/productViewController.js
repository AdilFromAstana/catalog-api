const ProductViewService = require("../services/productViewService");

class ProductViewController {
  // üîπ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–∞
  async logProductView(req, res) {
    try {
      console.log("Body:", req.body); // üëÄ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–ø—Ä–æ—Å–∞

      const { productId, duration, source } = req.body;
      const ipAddress =
        req.headers["x-forwarded-for"] || req.connection.remoteAddress; // –ü–æ–ª—É—á–∞–µ–º IP

      console.log("req.headers: ", req.headers);
      console.log("ipAddress: ", ipAddress);

      await ProductViewService.logView({
        productId,
        duration,
        source,
        ipAddress,
      });

      res.status(201).json({ success: true, message: "View logged" });
    } catch (error) {
      console.error("Error logging product view:", error);
      res.status(500).json({ success: false, error: "Internal server error" });
    }
  }

  // üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
  async getProductViews(req, res) {
    try {
      const { productId } = req.params;
      const views = await ProductViewService.getProductViews(productId);
      res.json({ success: true, data: views });
    } catch (error) {
      console.error("Error fetching product views:", error);
      res.status(500).json({ success: false, error: "Internal server error" });
    }
  }

  // üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º –ø–µ—Ä–µ—Ö–æ–¥–æ–≤
  async getProductViewStats(req, res) {
    try {
      const { productId } = req.params;
      const stats = await ProductViewService.getViewStats(productId);
      res.json({ success: true, data: stats });
    } catch (error) {
      console.error("Error fetching product view stats:", error);
      res.status(500).json({ success: false, error: "Internal server error" });
    }
  }
}

module.exports = new ProductViewController();
